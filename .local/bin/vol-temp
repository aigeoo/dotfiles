#!/bin/bash
# You can call this script like this:
# $ ./volume up
# $ ./volume down
# $ ./volume mute

DIR="$HOME/.local/share/icons/dunst"

function get_volume {
    pactl list sinks | grep '^[[:space:]]Volume:' | \
    head -n $(( $SINK + 1 )) | tail -n 1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,'
}

function is_mute {
    pactl list sinks | grep -q '^[[:space:]]Mute: yes'
}

function send_notification {
    volume=$(get_volume)
    bar=$(seq -s "â”€" 0 $(( $volume / 5 )) | sed 's/[0-9]//g')
    if [ "$volume" = "0" ]; then
        icon_name="$DIR/icons/volume-muted.svg"
        bar=""
    else
        if [ "$volume" -lt "10" ]; then
            icon_name="$DIR/icons/volume-low.svg"
        else
            if [ "$volume" -lt "30" ]; then
                icon_name="$DIR/icons/volume-low.svg"
            else
                if [ "$volume" -lt "70" ]; then
                    icon_name="$DIR/icons/volume-medium.svg"
                else
                    icon_name="$DIR/icons/volume-high.svg"
                fi
            fi
        fi
    fi
    # Send the notification
    dunstify "Volume $volume%" -i "$icon_name" -r 5555 -u normal -h int:value:$(($volume))
}

case $1 in
    up)
        # Unmute
        pactl set-sink-mute @DEFAULT_SINK@ 0 > /dev/null
        # +5%
        pactl set-sink-volume @DEFAULT_SINK@ +5% > /dev/null
        send_notification
        ;;
    down)
        # Unmute
        pactl set-sink-mute @DEFAULT_SINK@ 0 > /dev/null
        # -5%
        pactl set-sink-volume @DEFAULT_SINK@ -5% > /dev/null
        send_notification
        ;;
    mute)
        # Toggle mute
        pactl set-sink-mute @DEFAULT_SINK@ toggle > /dev/null
        if is_mute; then
            icon_name="$DIR/icons/volume-muted.svg"
            dunstify "Mute" -i "$icon_name" -r 5555 -u normal -h int:value:0
        else
            send_notification
        fi
        ;;
esac
